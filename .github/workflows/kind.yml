name: KinD tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - release-*

defaults:
  run:
    shell: bash
    working-directory: governance-policy-addon-controller

jobs:
  kind-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # KinD tags: https://hub.docker.com/r/kindest/node/tags
        # (OCP 4.6 runs Kubernetes v1.19)
        kind:
          - 'v1.19.16'
          - 'latest'
    name: KinD tests
    steps:
    - name: Checkout 
      uses: actions/checkout@v2
      with:
        path: governance-policy-addon-controller
        fetch-depth: 0 # Fetch all history for all tags and branches

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version-file: governance-policy-addon-controller/go.mod

    - name: Verify modules
      run: |
        go mod verify

    - name: Verify format
      run: |
        make fmt
        git diff --exit-code
        make lint

    - name: Create KinD Cluster (${{ matrix.kind }}) and deploy components
      env:
        KIND_VERSION: ${{ matrix.kind }}
      run: |
        ./build/manage-clusters.sh

    - name: E2E Tests
      run: |
        export GOPATH=$(go env GOPATH)
        make wait-for-work-agent
        make e2e-test

    - name: Test Coverage and Report Generation
      run: |
        make test | tee report_unit.json
        make gosec-scan

    - name: Store the GitHub triggering event for the sonarcloud workflow
      if: |
        matrix.kind == 'latest' &&
        github.repository_owner == 'stolostron'
      run: |
        cat <<EOF > event.json
        ${{ toJSON(github.event) }}
        EOF

    - name: Upload artifacts for the sonarcloud workflow
      if: |
        matrix.kind == 'latest' &&
        github.repository_owner == 'stolostron'
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: |
          governance-policy-addon-controller/coverage*.out
          governance-policy-addon-controller/event.json
          governance-policy-addon-controller/gosec.json

    - name: Clean up cluster
      if: ${{ always() }}
      run: |
        DELETE_CLUSTERS="true" ./build/manage-clusters.sh
